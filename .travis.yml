language: python

matrix:
  include:
    python: 3.6

branches:
  only:
    - master

# creating conda environment:
before_install:
    #install miniconda
    - wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    - chmod +x miniconda.sh
    - ./miniconda.sh -b -p "$PWD/miniconda/"
    - export PATH="$PWD/miniconda/bin/:$PATH"
    - yes | conda update conda  > /dev/null
    - conda config --set always_yes yes --set changeps1 no
    - conda config --add channels conda-forge
    - conda install -q conda-build
    - conda creat -q -n deepchembed python=3.6
    - source activate deepchembed

# set up enviroment
install:
  # Source conda environment:
    - yes | conda env update -f=environment.yml > /dev/null 
    - source activate deepchembed
#   - yes|conda install numpy==1.16.3 > /dev/null
#   - yes|conda install scipy==1.2.1 > /dev/null
#   - yes|conda install scikit-learn==0.20.3 > /dev/null
#   - yes|conda install seaborn==0.9.0 > /dev/null
#   - yes|conda install ipykernel=5.1.0 > /dev/null
#   - yes|conda install tensorflow==1.13.1 > /dev/null
#   - yes|conda install keras==2.2.4 > /dev/null
#   - yes|conda install -c conda-forge rdkit=2019.03.1 > /dev/null 
#   - yes|conda install -c rdkit -c mordred-descriptor mordred=1.1.1 > /dev/null
  #- pip install pandas > /dev/null
  # install coverage
  - pip install -U pytest
  - pip install coverage
  - pip install python-coveralls

# before_script:
#   - source activate deepchembed

script: 
  - PYTHONPATH=. py.test -s --pyargs deepchembed 
  #--cov-report term-missing --cov=deepchembed --cov-config .coveragerc

# generate a coverage report to send to back to user
after_success:
  - coveralls
